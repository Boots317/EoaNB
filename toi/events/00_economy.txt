add_namespace = economy


country_event = {
	id = economy.1
	title = economy.1.t
	desc = economy.1.d
	picture = GFX_report_event_generic_rally2

	is_triggered_only = yes

	option = {
		name = economy.1.o1
		random_owned_state = {
			limit = {
				NOT = { has_variable = corp_name }
			}
			add_to_array = { PREV.corporations = THIS }
			set_variable = { corp_name = random }
			divide_variable = { corp_name = 1.4 } #Combo Names more common
			round_variable = corp_name
			if = {
				limit = {
					check_variable = { corp_name = 1 }
				}
				randomize_variable = {
					var = corp_first_name
					distribution = uniform
					min = 0
					max = 23
				}
				round_variable = corp_first_name
			}
			else_if = {
				limit = {
					check_variable = { corp_name = 0 }
				}
				randomize_variable = {
					var = corp_first_name
					distribution = uniform
					min = 0
					max = 27
				}
				randomize_variable = {
					var = corp_last_name
					distribution = uniform
					min = 1
					max = 12
				}
				round_variable = corp_first_name
				round_variable = corp_last_name
				if = {
					limit = {
						check_variable = { random < 0.3 }
					}
					set_variable = { corp_first_name = 0 }
				}
			}
		}
	}
	option = {
		name = economy.1.o2
		clear_array = corporations
		every_owned_state = {
			clear_variable = corp_name
			clear_variable = corp_first_name
			clear_variable = corp_last_name
		}
	}
	option = {
		name = economy.1.o3
		
		set_variable = { price = 2 }
		#Reset
		276 = { #Ontario
			set_variable = { production = 0 }
			set_variable = { need = 7 }

			set_variable = { infra = 4 }
		}
		1310 = { #East Ontario
			set_variable = { production = 0 }
			set_variable = { need = 1 }
			
			set_variable = { infra = 4 }
		}
		1311 = { #Montreal
			set_variable = { production = 0 }
			set_variable = { need = 8 }
			
			set_variable = { infra = 4 }
		}
		468 = { #Quebec
			set_variable = { production = 0 }
			set_variable = { need = 2 }
			
			set_variable = { infra = 3 }
		}
	}
	option = {
		name = economy.1.o4
		#Getting Supply & Demand
		calc_supply_demand = yes

		#Supply & Demand
		set_temp_variable = { brk_v = 0 }
		while_loop_effect = {
			limit = {
				OR = {
					check_variable = { supply > demand }
					check_variable = { supply < demand }
				}
				check_variable = { brk_v < 10 }
			}
			if = {
				limit = {
					NOT = { check_variable = { demand = 0 } }
					NOT = { check_variable = { supply = 0 } }
				}
				set_temp_variable = { multiplier_temp = demand }
				divide_temp_variable = { multiplier_temp = supply }
				subtract_from_temp_variable = { multiplier_temp = 1 }
				divide_temp_variable = { multiplier_temp = 2 }
				add_to_temp_variable = { multiplier_temp = 1 }
				multiply_variable = { price = multiplier_temp }
			}
			else_if = {
				limit = {
					check_variable = { supply = 0 } #TODO
				}
				multiply_variable = { price = 1.2 }
				add_to_temp_variable = { brk_v = 10 }
			}

			calc_supply_demand = yes

			set_temp_variable = { supply_low = supply }
			divide_temp_variable = { supply_low = 1.03 }
			set_temp_variable = { supply_high = supply }
			multiply_temp_variable = { supply_high = 1.03 }
			
			add_to_temp_variable = { brk_v = 1 }
		}

		#Trade Coeff
		if = {
			limit = {
				check_variable = { offers > requests }
			}
			set_variable = { offers_coeff = requests }
			multiply_variable = { offers_coeff = 10 }
			divide_variable = { offers_coeff = offers }
			set_variable = { requests_coeff = 10 }
		}
		else_if = {
			limit = {
				check_variable = { offers < requests }
			}
			set_variable = { requests_coeff = offers }
			multiply_variable = { requests_coeff = 10 }
			divide_variable = { requests_coeff = requests }
			set_variable = { offers_coeff = 10 }
		}

		#Trade
		set_variable = { trade_amount = 0 }
		every_controlled_state = {
			if = { #Export
				limit = {
					check_variable = { supply > demand }
				}
				multiply_variable = { trade_amount = PREV.offers_coeff }
				divide_variable = { trade_amount = 10 }

				subtract_from_variable = { supply = trade_amount }
				subtract_from_variable = { PREV.trade_amount = trade_amount }
			}
			if = { #Import
				limit = {
					check_variable = { supply < demand }
				}
				multiply_variable = { trade_amount = PREV.requests_coeff }
				divide_variable = { trade_amount = 10 }

				add_to_variable = { supply = trade_amount }
				add_to_variable = { PREV.trade_amount = trade_amount }
			}
		}

		#In-State Price Adjustment
		every_controlled_state = {
			set_variable = { price = PREV.price }
			set_temp_variable = { supply_low = supply }
			set_temp_variable = { supply_high = supply }
			set_temp_variable = { brk_v = 0 }
			while_loop_effect = {
				limit = {
					OR = {
						check_variable = { supply_low > demand }
						check_variable = { supply_high < demand }
					}
					check_variable = { brk_v < 3 }
				}
				if = {
					limit = {
						NOT = { check_variable = { demand = 0 } }
						NOT = { check_variable = { supply = 0 } }
					}
					set_temp_variable = { multiplier_temp = demand }
					divide_temp_variable = { multiplier_temp = supply }
					subtract_from_temp_variable = { multiplier_temp = 1 }
					divide_temp_variable = { multiplier_temp = 2 }
					add_to_temp_variable = { multiplier_temp = 1 }
					multiply_variable = { price = multiplier_temp }
				}
				else = {
					add_to_temp_variable = { brk_v = 10 }
				}

				set_variable = { demand = need }
				divide_variable = { demand = price }

				set_temp_variable = { supply_low = supply }
				divide_temp_variable = { supply_low = 1.03 }
				set_temp_variable = { supply_high = supply }
				multiply_temp_variable = { supply_high = 1.03 }
				
				add_to_temp_variable = { brk_v = 1 }
			}

		}
		
	}
	option = {
		name = economy.1.o5
		
	}
}